name: Build EXE (Windows)

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  id-token: write
  contents: write

jobs:
  build-exe:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Build with PyInstaller (onefile)
        run: |
          # Clean old build artifacts if present
          if [ -d build ]; then rm -rf build; fi
          if [ -d dist ]; then rm -rf dist; fi

          # build single-file exe; --log-level=INFO can be reduced/expanded
          pyinstaller --onefile --noconfirm exer.py
        shell: bash

      - name: Rename and move exe
        run: |
          mkdir -p out
          if [ -f dist/exer.exe ]; then
            mv dist/exer.exe out/lpu-wifi-autologin.exe
          else
            echo "ERROR: dist/exer.exe not found"
            exit 1
          fi
        shell: bash

      - name: Upload artifact (exe)
        uses: actions/upload-artifact@v4
        with:
          # name: lpu-wifi-autologin
          # path: out/lpu-wifi-autologin.exe
          name: exe
          path: dist/lpu-wifi-autologin.exe

      # - name: Create GitHub Release
      #   uses: softprops/action-gh-release@v1
      #   with:
      #     tag_name: ${{ github.run_number }}
      #     name: "Release #${{ github.run_number }}"
      #     body: |
      #       Automated build created using GitHub actions from commit: ${{ github.sha }}.

      #       ## Click on `lpu-wifi-autologin.exe` to download and then run it.
      #       > [!WARNING]
      #       > If windows blue screen warning pops up, `More info` -> `Run Anyway`.

      #     files: out/lpu-wifi-autologin.exe
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
  sign:
    runs-on: ubuntu-latest
    needs: build-exe

    steps:
      - name: Download exe artifact
        uses: actions/download-artifact@v4
        with:
          name: exe
          path: .

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3

      - name: Sign the binary with OIDC identity
        run: |
          cosign sign-blob --yes --output-signature lpu-wifi-autologin.exe.sig lpu-wifi-autologin.exe

      - name: Upload signed release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            lpu-wifi-autologin.exe
            lpu-wifi-autologin.exe.sig
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
