name: Build EXE (Windows)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-exe:
    runs-on: windows-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Build with PyInstaller (onefile)
        run: |
          # Clean old build artifacts if present
          if [ -d build ]; then rm -rf build; fi
          if [ -d dist ]; then rm -rf dist; fi

          # build single-file exe; --log-level=INFO can be reduced/expanded
          pyinstaller --onefile --noconfirm exer.py
        shell: bash

      - name: Zip the exe
        run: |
          mkdir -p out
          # On Windows runner, dist/exer.exe will exist
          if [ -f dist/exer.exe ]; then
            powershell -Command "Compress-Archive -Path dist/exer.exe -DestinationPath out/exer-windows.zip -Force"
          else
            echo "ERROR: dist/exer.exe not found"
            exit 1
          fi
        shell: bash

      - name: Upload artifact (zip)
        uses: actions/upload-artifact@v4
        with:
          name: exer-windows
          path: out/exer-windows.zip


      - name: Create tag
        id: tag
        run: |
          git fetch --tags
          tag_name="build-${{ github.run_number }}"
          git tag $tag_name
          git push origin $tag_name
          echo "tag_name=$tag_name" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.tag_name }}
          name: "Auto Build ${{ env.tag_name }}"
          body: "Automated build from commit ${{ github.sha }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}


      - name: Upload release asset (optional)
        if: startsWith(github.ref, 'refs/heads/main')
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: out/exer-windows.zip
          asset_name: exer-windows-${{ github.sha }}.zip
          asset_content_type: application/zip
